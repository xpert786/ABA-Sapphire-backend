# Generated by Django 5.2.7 on 2025-10-17 10:27

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('session_notes', models.TextField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('service_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(limit_choices_to={'role__name': 'Clients/Parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='session_logs_as_client', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(limit_choices_to={'role__name__in': ['RBT', 'BCBA']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session_logs_as_staff', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['session_date', 'start_time'],
                'unique_together': {('staff', 'session_date', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='ReinforcementStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_type', models.CharField(max_length=255)),
                ('frequency', models.PositiveIntegerField()),
                ('pr_ratio', models.PositiveIntegerField()),
                ('notes', models.TextField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reinforcement_strategies', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='PreSessionChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('is_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('sib', 'SIB/Self-Injurious Behavior'), ('aggression', 'Aggression'), ('elopement', 'Elopement'), ('major_disruption', 'Major Disruption'), ('minor_disruption', 'Minor Disruption'), ('odr', 'ODR'), ('ir', 'IR'), ('crisis', 'CRISIS')], max_length=30)),
                ('behavior_severity', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='GoalProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_description', models.TextField()),
                ('is_met', models.BooleanField()),
                ('implementation_method', models.CharField(choices=[('verbal', 'Verbal'), ('visual', 'Visual'), ('physical', 'Physical'), ('combination', 'Combination')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_progress', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_type', models.CharField(choices=[('direct', 'Direct'), ('indirect', 'Indirect'), ('supervision', 'Supervision')], default='direct', max_length=20)),
                ('duration', models.PositiveIntegerField()),
                ('unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours')], default='minutes', max_length=10)),
                ('reason', models.TextField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_times', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=255)),
                ('duration_minutes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(480)])),
                ('reinforcement_strategies', models.TextField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='ABCEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antecedent', models.TextField()),
                ('behavior', models.TextField()),
                ('consequence', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abc_events', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_content', models.TextField()),
                ('note_type', models.CharField(default='general', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionTimer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_running', models.BooleanField(default=False)),
                ('total_duration', models.DurationField(default=datetime.timedelta(0))),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='timer', to='session.session')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_type', models.CharField(choices=[('direct', 'Direct Therapy'), ('indirect', 'Indirect Therapy'), ('supervision', 'Supervision'), ('documentation', 'Documentation'), ('travel', 'Travel Time'), ('training', 'Training'), ('meeting', 'Meeting')], default='direct', max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_time_trackers', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_trackers', to='session.session')),
            ],
            options={
                'verbose_name': 'Time Tracker Entry',
                'verbose_name_plural': 'Time Tracker Entries',
                'ordering': ['-start_time'],
            },
        ),
    ]
